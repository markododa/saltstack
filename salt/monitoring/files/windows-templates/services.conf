apply Service "CPU Load" {
  import "generic-service"
  check_command = "check_win_perfmon"
  vars.xml = "C:\\Program Files\\ICINGA2\\sbin\\PerfMonCPU.xml"
  command_endpoint = host.name
  assign where host.vars.agent == "True"
}

apply Service "Network Load" {
  import "generic-service"
  check_command = "check_win_perfmon"
  vars.xml = "C:\\Program Files\\ICINGA2\\sbin\\PerfMonNetwork.xml"
  command_endpoint = host.name
  assign where host.vars.agent == "True"
}

apply Service "Disk_0 Load" {
  import "generic-service"
  check_command = "check_win_perfmon"
  vars.xml = "C:\\Program Files\\ICINGA2\\sbin\\PerfMonPhysicalDisk.xml"
  command_endpoint = host.name
  assign where host.vars.agent == "True"
}

apply Service "Memory Load" {
  import "generic-service"
  check_command = "check_win_perfmon"
  vars.xml = "C:\\Program Files\\ICINGA2\\sbin\\PerfMonMem.xml"
  command_endpoint = host.name
  assign where host.vars.agent == "True"
}

#apply Service "Hyper-V: status" {
#  import "generic-service"
#  check_command = "check_win_perfmon"
#  vars.xml = "C:\\Program Files\\ICINGA2\\sbin\\PerfMonHyperV.xml"
#  command_endpoint = host.name
#  assign where "Hyper-V" in host.groups
#}

apply Service "Hyper-V: list-vms" {
  import "generic-service"
  display_name = "Hyper-V: Virtual Machines"
  check_command = "powershell_check"
  vars.ps_command = "& 'C:\\ProgramData\\icinga2\\var\\lib\\icinga2\\api/zones\\global-templates\\_etc\\list-vms.ps1'"
  command_endpoint = host.address
  assign where "Hyper-V" in host.groups #&& host.name in zones
}

apply Service "WSUS" {
  import "generic-service"
  display_name = "WSUS"
  check_command = "powershell_check"
  vars.ps_command = "& 'C:\\ProgramData\\icinga2\\var\\lib\\icinga2\\api/zones\\global-templates\\_etc\\check_wsus_critical_updates.ps1'"
  command_endpoint = host.address
  assign where "WSUS" in host.groups
}

apply Service "Hyper-V: Disks" {
  import "generic-service"
  display_name = "Hyper-V: Disks"
  check_command = "powershell_check"
  vars.ps_command = "& 'C:\\ProgramData\\icinga2\\var\\lib\\icinga2\\api/zones\\global-templates\\_etc\\hyper-v-disk.ps1'"
  command_endpoint = host.address
  assign where "Hyper-V" in host.groups && host.vars.hyperv_thinprovisioned == true
}

apply Service "XenDesktop: "  for ( desktopgroup in host.vars.desktopgroups ) {
  import "generic-service"
  check_command = "powershell_check"
  vars.ps_command = "& 'C:\\ProgramData\\icinga2\\var\\lib\\icinga2\\api/zones\\global-templates\\_etc\\check_xendesktop_available_machines.ps1' " + desktopgroup + " 0 0"
  command_endpoint = host.address
  assign where "XenDesktop" in host.groups
}
apply Service "XenDesktop: info" {
  import "generic-service"
  display_name = "XenDesktop:info"
  check_command = "powershell_check"
  vars.ps_command = "& 'C:\\ProgramData\\icinga2\\var\\lib\\icinga2\\api/zones\\global-templates\\_etc\\citrix.ps1'"
  command_endpoint = host.address
  assign where "XenDesktop" in host.groups
}

apply Service "Windows Services" {
  import "generic-service"
  display_name = "Windows Services"
  check_command = "powershell_check"
  vars.ps_command = "& 'C:\\ProgramData\\icinga2\\var\\lib\\icinga2\\api/zones\\global-templates\\_etc\\check_services.ps1'"
  command_endpoint = host.name
  assign where "Windows Server in Domain" in host.groups && host.vars.agent == true
  assign where "Windows Server (Standalone)" in host.groups && host.vars.agent == true
}

apply Service "Veeam Backup" {
  import "generic-service"
  display_name = "Veeam Backup"
  check_command = "powershell_check"
  vars.ps_command = "& 'C:\\ProgramData\\icinga2\\var\\lib\\icinga2\\api/zones\\global-templates\\_etc\\check_usolved_veeam_backups.ps1'"
  command_endpoint = host.name
  assign where "Veeam" in host.groups && host.vars.agent == true
}


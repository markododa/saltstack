    object CheckCommand "checkmssql_health" {
       import "plugin-check-command"
       command = [PluginDir + "/libexec/check_mssql_health"]
       arguments = {
       "--server" = "$host.address$\\$host.vars.mssql_instance$"
       "--username" = "$host.vars.mssql_username$"
       "--password" = "$host.vars.mssql_password$"
       "--mode" = "$mssqlhealth_mode$"
       #"--critical" = "$mssqlhealth_critical$"
       #"--warning" = "$mssqlhealth_warning$"
       "--commit" = ""
       }
    }

    mssqlhealth_modes["connected-users"] = {
         mssqlhealth_modes = "connected-users"
         mssqlhealth_warning = "50"
         mssqlhealth_critical = "80"
      }
    mssqlhealth_modes["connection-time"] = {
         mssqlhealth_modes = "connection-time"
         mssqlhealth_warning = "1"
         mssqlhealth_critical = "5"
      }
    mssqlhealth_modes["cpu-busy"] = {
         mssqlhealth_modes = "cpu-busy"
         mssqlhealth_warning = "80"
         mssqlhealth_critical = "100"
      }
    mssqlhealth_modes["io-busy"] = {
         mssqlhealth_modes = "io-busy"
         mssqlhealth_warning = "80"
         mssqlhealth_critical = "100"
      }
    mssqlhealth_modes["mem-pool-data-buffer-hit-ratio"] = {
         mssqlhealth_modes = "mem-pool-data-buffer-hit-ratio"
         mssqlhealth_warning = "90%"
         mssqlhealth_critical = "80%"
      }
    mssqlhealth_modes["free-list-stalls"] = {
         mssqlhealth_modes = "free-list-stalls"
         mssqlhealth_warning = "4"
         mssqlhealth_critical = "10"
      }
    mssqlhealth_modes["database-free"] = {
         mssqlhealth_modes = "database-free"
         mssqlhealth_warning = "110"
         mssqlhealth_critical = "120"
      }
    mssqlhealth_modes["failed-jobs"] = {
         mssqlhealth_modes = "failed-jobs"
         mssqlhealth_warning = "1"
         mssqlhealth_critical = "5"
      }

    mssqlhealth_modes["locks-waits"] = {
         mssqlhealth_modes = "locks-waits"
         mssqlhealth_warning = "1"
         mssqlhealth_critical = "2"
      }
    mssqlhealth_modes["locks-deadlocks"] = {
         mssqlhealth_modes = "locks-deadlocks"
         mssqlhealth_warning = "1"
         mssqlhealth_critical = "2"
      }
    mssqlhealth_modes["database-backup-age"] = {
         mssqlhealth_modes = "database-backup-age"
         mssqlhealth_warning = "24"
         mssqlhealth_critical = "48"
      }


    apply Service "mssql_check_health: " for (mode => config in mssqlhealth_modes){
      import "generic-service"
      check_command = "checkmssql_health"
      vars.mssqlhealth_mode = mode
      vars+=config
      vars.mssqlhealth_critical = config.mssqlhealth_critical
      vars.mssqlhealth_warning = config.mssqlhealth_warning
      assign where host.vars.mssql_server == "True"
    }

    object CheckCommand "checkmssql_health" {
       import "plugin-check-command"
       command = [PluginDir + "/libexec/check_mssql_health"]
       arguments = {
       "--server" = "$host.address$\\$mssql_instance$"
       "--username" = "$host.vars.mssql_username$"
       "--password" = "$host.vars.mssql_password$"
       "--mode" = "$mssqlhealth_mode$"
       #"--critical" = "$mssqlhealth_critical$"
       #"--warning" = "$mssqlhealth_warning$"
       "--commit" = "\\"
       }
    }


    apply Service "mssql_check: connected-users" for (mssql_instance in host.vars.mssql_instances){
      import "generic-service"
      check_command = "checkmssql_health"
      vars.mssqlhealth_mode = "connected-users"
      display_name = host.address + "\\" + mssql_instance + " : " + vars.mssqlhealth_mode
      vars.mssql_instance = mssql_instance
      vars.mssqlhealth_critical = "80"
      vars.mssqlhealth_warning = "50"
      assign where host.vars.mssql_server == "True"
    }

    apply Service "mssql_check: connection-time" for (mssql_instance in host.vars.mssql_instances){
      import "generic-service"
      check_command = "checkmssql_health"
      vars.mssqlhealth_mode = "connection-time"
      display_name = host.address + "\\" + mssql_instance + " : " + vars.mssqlhealth_mode
      vars.mssql_instance = mssql_instance
      vars.mssqlhealth_critical = "5"
      vars.mssqlhealth_warning = "1"
      assign where host.vars.mssql_server == "True"
    }

    apply Service "mssql_check: cpu-busy" for (mssql_instance in host.vars.mssql_instances){
      import "generic-service"
      check_command = "checkmssql_health"
      vars.mssqlhealth_mode = "cpu-busy"
      display_name = host.address + "\\" + mssql_instance + " : " + vars.mssqlhealth_mode
      vars.mssql_instance = mssql_instance
      vars.mssqlhealth_critical = "100"
      vars.mssqlhealth_warning = "80"
      assign where host.vars.mssql_server == "True"
    }

    apply Service "mssql_check: io-busy" for (mssql_instance in host.vars.mssql_instances){
      import "generic-service"
      check_command = "checkmssql_health"
      vars.mssqlhealth_mode = "io-busy"
      display_name = host.address + "\\" + mssql_instance + " : " + vars.mssqlhealth_mode
      vars.mssql_instance = mssql_instance
      vars.mssqlhealth_critical = "100"
      vars.mssqlhealth_warning = "80"
      assign where host.vars.mssql_server == "True"
    }

    apply Service "mssql_check: mem-pool-data-buffer-hit-ratio" for (mssql_instance in host.vars.mssql_instances){
      import "generic-service"
      check_command = "checkmssql_health"
      vars.mssqlhealth_mode = "mem-pool-data-buffer-hit-ratio"
      display_name = host.address + "\\" + mssql_instance + " : " + vars.mssqlhealth_mode
      vars.mssql_instance = mssql_instance
      vars.mssqlhealth_critical = "80"
      vars.mssqlhealth_warning = "90%"
      assign where host.vars.mssql_server == "True"
    }

    apply Service "mssql_check: free-list-stalls" for (mssql_instance in host.vars.mssql_instances){
      import "generic-service"
      check_command = "checkmssql_health"
      vars.mssqlhealth_mode = "free-list-stalls"
      display_name = host.address + "\\" + mssql_instance + " : " + vars.mssqlhealth_mode
      vars.mssql_instance = mssql_instance
      vars.mssqlhealth_critical = "10"
      vars.mssqlhealth_warning = "4"
      assign where host.vars.mssql_server == "True"
    }

    apply Service "mssql_check: database-free" for (mssql_instance in host.vars.mssql_instances){
      import "generic-service"
      check_command = "checkmssql_health"
      vars.mssqlhealth_mode = "database-free"
      display_name = host.address + "\\" + mssql_instance + " : " + vars.mssqlhealth_mode
      vars.mssql_instance = mssql_instance
      vars.mssqlhealth_critical = "120"
      vars.mssqlhealth_warning = "110"
      assign where host.vars.mssql_server == "True"
    }

    apply Service "mssql_check: failed-jobs" for (mssql_instance in host.vars.mssql_instances){
      import "generic-service"
      check_command = "checkmssql_health"
      vars.mssqlhealth_mode = "failed-jobs"
      display_name = host.address + "\\" + mssql_instance + " : " + vars.mssqlhealth_mode
      vars.mssql_instance = mssql_instance
      vars.mssqlhealth_critical = "5"
      vars.mssqlhealth_warning = "1"
      assign where host.vars.mssql_server == "True"
    }

    apply Service "mssql_check: locks-waits" for (mssql_instance in host.vars.mssql_instances){
      import "generic-service"
      check_command = "checkmssql_health"
      vars.mssqlhealth_mode = "locks-waits"
      display_name = host.address + "\\" + mssql_instance + " : " + vars.mssqlhealth_mode
      vars.mssql_instance = mssql_instance
      vars.mssqlhealth_critical = "2"
      vars.mssqlhealth_warning = "1"
      assign where host.vars.mssql_server == "True"
    }

    apply Service "mssql_check: locks-timeouts" for (mssql_instance in host.vars.mssql_instances){
      import "generic-service"
      check_command = "checkmssql_health"
      vars.mssqlhealth_mode = "locks-timeout"
      display_name = host.address + "\\" + mssql_instance + " : " + vars.mssqlhealth_mode
      vars.mssql_instance = mssql_instance
      vars.mssqlhealth_critical = "2"
      vars.mssqlhealth_warning = "1"
      assign where host.vars.mssql_server == "True"
    }

    apply Service "mssql_check: locks-deadlocks" for (mssql_instance in host.vars.mssql_instances){
      import "generic-service"
      check_command = "checkmssql_health"
      vars.mssqlhealth_mode = "locks-deadlocks"
      display_name = host.address + "\\" + mssql_instance + " : " + vars.mssqlhealth_mode
      vars.mssql_instance = mssql_instance
      vars.mssqlhealth_critical = "2"
      vars.mssqlhealth_warning = "1"
      assign where host.vars.mssql_server == "True"
    }

    apply Service "mssql_check: sql-recompilations" for (mssql_instance in host.vars.mssql_instances){
      import "generic-service"
      check_command = "checkmssql_health"
      vars.mssqlhealth_mode = "sql-recompilations"
      display_name = host.address + "\\" + mssql_instance + " : " + vars.mssqlhealth_mode
      vars.mssql_instance = mssql_instance
      vars.mssqlhealth_critical = "2"
      vars.mssqlhealth_warning = "1"
      assign where host.vars.mssql_server == "True"
    }

    apply Service "mssql_check: lazy-writes" for (mssql_instance in host.vars.mssql_instances){
      import "generic-service"
      check_command = "checkmssql_health"
      vars.mssqlhealth_mode = "lazy-writes"
      display_name = host.address + "\\" + mssql_instance + " : " + vars.mssqlhealth_mode
      vars.mssql_instance = mssql_instance
      vars.mssqlhealth_critical = "2"
      vars.mssqlhealth_warning = "1"
      assign where host.vars.mssql_server == "True"
    }



    apply Service "mssql_check: database-backup-age" for (mssql_instance in host.vars.mssql_instances){
      import "generic-service"
      check_command = "checkmssql_health"
      vars.mssqlhealth_mode = "database-backup-age"
      display_name = host.address + "\\" + mssql_instance + " : " + vars.mssqlhealth_mode
      vars.mssql_instance = mssql_instance
      vars.mssqlhealth_critical = "48"
      vars.mssqlhealth_warning = "24"
      assign where host.vars.mssql_server == "True"
    }

    apply Service "mssql_check: list-databases" for (mssql_instance in host.vars.mssql_instances){
      import "generic-service"
      check_command = "checkmssql_health"
      vars.mssqlhealth_mode = "list-databases"
      display_name = host.address + "\\" + mssql_instance + " : " + vars.mssqlhealth_mode
      vars.mssql_instance = mssql_instance
      vars.mssqlhealth_critical = "5000"
      vars.mssqlhealth_warning = "10000"
      assign where host.vars.mssql_server == "True"
    }

    apply Service "mssql_check: list-locks" for (mssql_instance in host.vars.mssql_instances){
      import "generic-service"
      check_command = "checkmssql_health"
      vars.mssqlhealth_mode = "list-locks"
      display_name = host.address + "\\" + mssql_instance + " : " + vars.mssqlhealth_mode
      vars.mssql_instance = mssql_instance
      vars.mssqlhealth_critical = "5000"
      vars.mssqlhealth_warning = "10000"
      assign where host.vars.mssql_server == "True"
    }


    apply Service "mssql_check: transactions" for (mssql_instance in host.vars.mssql_instances){
      import "generic-service"
      check_command = "checkmssql_health"
      vars.mssqlhealth_mode = "transactions"
      display_name = host.address + "\\" + mssql_instance + " : " + vars.mssqlhealth_mode
      vars.mssql_instance = mssql_instance
      vars.mssqlhealth_critical = "10000"
      vars.mssqlhealth_warning = "50000"
      assign where host.vars.mssql_server == "True"
    }

    apply Service "mssql_check: total-server-memory" for (mssql_instance in host.vars.mssql_instances){
      import "generic-service"
      check_command = "checkmssql_health"
      vars.mssqlhealth_mode = "total-server-memory"
      display_name = host.address + "\\" + mssql_instance + " : " + vars.mssqlhealth_mode
      vars.mssql_instance = mssql_instance
      assign where host.vars.mssql_server == "True"
    }

    apply Service "mssql_check: batch-requests" for (mssql_instance in host.vars.mssql_instances){
      import "generic-service"
      check_command = "checkmssql_health"
      vars.mssqlhealth_mode = "batch-requests"
      display_name = host.address + "\\" + mssql_instance + " : " + vars.mssqlhealth_mode
      vars.mssql_instance = mssql_instance
      assign where host.vars.mssql_server == "True"
    }


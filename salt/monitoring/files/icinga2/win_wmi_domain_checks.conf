# TEST COMMAND
# /usr/lib/nagios/plugins/check_wmi_plus.pl -H 192.168.5.5 -A /etc/icinga2/conf.d/cred_win_domain.txt -m checktime -w 10

object CheckCommand "check_online" {
#USED for Windows Desktops. Alwaus return UP as return code, but the description is changing
import "plugin-check-command"
command = [ "/usr/lib/nagios/plugins/check_online.sh" ]
arguments = {
"-H" = "$host.address$"
}
}

object EventCommand "autoack" {
#UNKNOW services should be auto acknowledged. Otherwise when the Windows machine is DOWN lot of services are unknown (usefull for desktops)
import "plugin-event-command"
command = "/usr/lib/nagios/plugins/event_auto_ack.sh $host.name$ $service.name$ $service.state$"
}

object CheckCommand "check_wmi" {
import "plugin-check-command"
timeout = 1m
command = [ "/usr/lib/nagios/plugins/check_wmi_plus.pl" ]

arguments = {
"--inidir" = "$wmi_inidir$"
"-H" = "$host.address$"
"-A" = "$wmi_authfile_path$"
"-m" = "$check_mode$"
"-s" = "$wmi_submode$"
"-a" = "$wmi_arg1$"
"-o" = "$wmi_arg2$"
"-3" = "$wmi_arg3$"
"-4" = "$wmi_arg4$"
"-y" = "$wmi_delay$"
"-w" = "$wmi_warn$"
"-c" = "$wmi_crit$"
"-t" = "60"
"-exc" = "$wmi_exclude$"
"--nodatamode" = {
set_if = "$wmi_nodatamode$"
}
}

vars.wmi_authfile_path = "/etc/icinga2/conf.d/cred_win_domain.txt"
vars.wmi_inidir = "/etc/check_wmi_plus/check_wmi_plus.d"
vars.wmi_nodatamode = false
}

template Service "wmi-service" {
  import "generic-service"
  check_command = "check_wmi"
  check_interval = 5m
  check_timeout = 1m
  retry_interval = 10m
  max_check_attempts = 3
  event_command = "autoack"
}


apply Service "UP Time" {
  import "wmi-service"
  check_interval = 5m
  retry_interval = 5m

  vars.check_mode = "checkuptime"
  vars.wmi_nodatamode = true
  assign where "Windows Server in Domain" in host.groups
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.disable_wmi
}

apply Service "Clock" {
  import "wmi-service"
  check_interval = 60m
  retry_interval = 60m
  vars.wmi_warn = ">50"
  vars.wmi_crit = ">60"
  vars.check_mode = "checktime"

  assign where "Windows Server in Domain" in host.groups
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.disable_wmi

 }


apply Service "Disk" {
  import "wmi-service"
  check_interval = 10m
  retry_interval = 10m
  vars.check_mode = "checkdrivesize"
  vars.wmi_arg1 = "."
  vars.wmi_warn = "80"
  vars.wmi_crit = "90"

  assign where "Windows Server in Domain" in host.groups
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.disable_wmi

}

apply Service "Memory" {
  import "wmi-service"
  check_interval = 10m
  retry_interval = 10m
  vars.check_mode = "checkmem"
  vars.wmi_warn = "80"
  vars.wmi_crit = "90"

  assign where "Windows Server in Domain" in host.groups
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.disable_wmi
}

apply Service "CPU" {
  import "wmi-service"
  check_interval = 5m
  retry_interval = 10m
  vars.check_mode = "checkcpu"
  vars.wmi_warn = "80"
  vars.wmi_crit = "90"

  assign where "Windows Server in Domain" in host.groups
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.disable_wmi
}

apply Service "CPU Hungry Apps" {
  import "wmi-service"
  check_interval = 2m
  retry_interval = 2m
  vars.check_mode = "checkproc"
  vars.wmi_submode = "cpuabove"
  vars.wmi_arg1 = "%"
  vars.wmi_exclude = "_AvgCPU=@0:10"
  vars.wmi_delay = "0"
  vars.wmi_warn = "80"
  vars.wmi_crit = "90"
  vars.wmi_nodatamode = true

  assign where "Windows Server in Domain" in host.groups
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.disable_wmi
}

apply Service "Swap" {
  import "wmi-service"

  vars.check_mode = "checkpage"
  vars.wmi_arg1 = "auto"

  assign where "Windows Server in Domain" in host.groups
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.disable_wmi
}


apply Service "Network Cards" {
  import "wmi-service"

  vars.check_mode = "checknetwork"
  vars.wmi_arg1 = "192."
  vars.wmi_warn = "_SendBytesUtilisation=20"
  vars.wmi_crit = "_SendBytesUtilisation=40"

  assign where host.vars.os == "Windows-"
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.disable_wmi
}

apply Service "Log: System" {
  import "wmi-service"

  vars.check_mode = "checkeventlog"
  vars.wmi_arg1 = "system"
  vars.wmi_arg2 = "2,1"
  vars.wmi_arg3 = "1"
  vars.wmi_warn = "50"
  vars.wmi_crit = "100"

  assign where "Windows Server in Domain" in host.groups
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.disable_wmi
}

apply Service "Log: Application" {
  import "wmi-service"

  vars.check_mode = "checkeventlog"
  vars.wmi_arg1 = "application"
  vars.wmi_arg2 = "2,1"
  vars.wmi_arg3 = "1"
  vars.wmi_warn = "50"
  vars.wmi_crit = "100"

  assign where "Windows Server in Domain" in host.groups
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.disable_wmi
}

apply Service "Log: Security" {
  import "wmi-service"
  check_interval = 15m
  retry_interval = 5m
  max_check_attempts = 1

  vars.check_mode = "checkeventlog"
  vars.wmi_arg1 = "security"
  vars.wmi_arg2 = ",5"
  vars.wmi_arg3 = "1"
  vars.wmi_warn = "50"
  vars.wmi_crit = "100"
  vars.hidden = "True"
  assign where "Windows Server in Domain" in host.groups
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.disable_wmi
}

apply Service "Services" {
  import "wmi-service"

  vars.check_mode = "checkservice"
  vars.wmi_arg1 = "auto"
  vars.wmi_arg2 = ".net|RemoteRegistry|TrustedInstaller|sppsvc"
  vars.wmi_warn = "3"
  vars.wmi_crit = "5"

  assign where "Windows Server in Domain" in host.groups
  ignore where host.vars.windesktop == "True"
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.disable_wmi
}




apply Service "Some Process" {
  import "wmi-service"

  vars.check_mode = "checkproc"
  vars.wmi_submode = "count"
  vars.wmi_arg1 = "sbamsvc"
  vars.wmi_warn = "1:1"
  vars.wmi_nodatamode = "32134234"

  assign where host.vars.os == "Windows-"
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.disable_wmi

}

apply Service "Info: OS Version" {
  import "wmi-service"
  vars.check_mode = "info"
  vars.wmi_submode = "os"
  check_interval = 100m
  retry_interval = 30m

  assign where "Windows Server in Domain" in host.groups
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.disable_wmi
}

apply Service "Info: Network Adapters" {
  import "wmi-service"

  vars.check_mode = "info"
  vars.wmi_submode = "net"

  assign where "Windows Server in Domain" in host.groups
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.disable_wmi
}

apply Service "Info: CPU details" {
  import "wmi-service"
  check_interval = 100m
  retry_interval = 30m

  vars.check_mode = "info"
  vars.wmi_submode = "cpu"

  ignore where host.vars.win_version == "2003"
  assign where "Windows Server in Domain" in host.groups
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.disable_wmi
}

apply Service "Users" {
  import "wmi-service"

  vars.check_mode = "checkts"
  vars.wmi_submode = "sessions"
  vars.wmi_warn = "ActiveSessions=1 -w TotalSessions=2"
  vars.wmi_crit = "ActiveSessions=2 -c TotalSessions=2"

  assign where "Windows Server in Domain" in host.groups
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.win_version == "2003"
  ignore where host.vars.disable_wmi
}

apply Service "Users" {
  import "wmi-service"

  vars.check_mode = "checkts"
  vars.wmi_submode = "sessions2003"
  vars.wmi_warn = "ActiveSessions=1 -w TotalSessions=2"
  vars.wmi_crit = "ActiveSessions=2 -c TotalSessions=2"

  assign where "Windows Server in Domain" in host.groups && host.vars.win_version == "2003"
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.disable_wmi
}


apply Service "Disk IO C:" {
  import "wmi-service"

  vars.check_mode = "checkio"
  vars.wmi_submode = "logical"
  vars.wmi_arg1 = "C:"

  assign where "Windows Server in Domain" in host.groups
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.disable_wmi
}



apply Service "AD Replication Status" {
  import "wmi-service"
  check_interval = 5m
  retry_interval = 10m

  vars.check_mode = "checkad"
  vars.wmi_submode = "replication"
  vars.wmi_crit = "0"
  vars.wmi_nodatamode = true

  assign where "Domain Controller" in host.groups
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.disable_wmi
}

apply Service "AD DNS Statistics" {
  import "wmi-service"
  check_interval = 5m
  retry_interval = 10m

  vars.check_mode = "checkdns"
  vars.wmi_submode = "stats"
  vars.wmi_nodatamode = true

  assign where "Domain Controller" in host.groups
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.disable_wmi
}

apply Service "AD DNS A Records" {
  import "wmi-service"
  check_interval = 5m
  retry_interval = 10m

  vars.check_mode = "checkdns"
  vars.wmi_submode = "arecords"
  vars.wmi_nodatamode = true

  assign where "Domain Controller" in host.groups
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.disable_wmi
}

apply Service "AD DNS CNAME Records" {
  import "wmi-service"
  check_interval = 5m
  retry_interval = 10m

  vars.check_mode = "checkdns"
  vars.wmi_submode = "cnamerecords"
  vars.wmi_nodatamode = true

  assign where "Domain Controller" in host.groups
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.disable_wmi
}

apply Service "IIS: Users" {
  import "wmi-service"

  vars.check_mode = "checkiis"
  vars.wmi_submode = "users"
  vars.wmi_arg1 = "_Total"

  assign where "Windows Server in Domain" in host.groups && "IIS Server" in host.groups
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.disable_wmi
}

apply Service "IIS: Requests" {
  import "wmi-service"

  vars.check_mode = "checkiis"
  vars.wmi_submode = "requests"
  vars.wmi_arg1 = "_Total"

  assign where "Windows Server in Domain" in host.groups && "IIS Server" in host.groups
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.disable_wmi
}

apply Service "Windows DHCP Server" {
  import "wmi-service"

  vars.check_mode = "checkdhcp"
  vars.wmi_submode = "stats"

  assign where "Windows Server in Domain" in host.groups && "DHCP Server" in host.groups
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.disable_wmi
}


apply Service "IIS: Connections" {
  import "wmi-service"

  vars.check_mode = "checkiis"
  vars.wmi_submode = "connections"
  vars.wmi_arg1 = "_Total"

  assign where "Windows Server in Domain" in host.groups && "IIS Server" in host.groups
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.disable_wmi
}

apply Service "IIS: Errors" {
  import "wmi-service"

  vars.check_mode = "checkiis"
  vars.wmi_submode = "errors"
  vars.wmi_arg1 = "_Total"

  assign where "Windows Server in Domain" in host.groups && "IIS Server" in host.groups
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.disable_wmi
}

apply Service "MSSQL: General Statistics" {
  import "wmi-service"

  vars.check_mode = "checksql"
  vars.wmi_submode = "general"
  if (host.vars.mssql_edition == "Express") {
    vars.wmi_arg1 = "MSSQLSQLEXPRESS_MSSQLSQLEXPRESS"
  }

  assign where host.vars.wmi_mssql_server == "True"
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.disable_wmi
}

apply Service "MSSQL: Buffer Manager" {
  import "wmi-service"

  vars.check_mode = "checksql"
  vars.wmi_submode = "buffermanager"
  if (host.vars.mssql_edition == "Express") {
    vars.wmi_arg1 = "MSSQLSQLEXPRESS_MSSQLSQLEXPRESS"
  }

  assign where host.vars.wmi_mssql_server == "True"
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.disable_wmi
}

apply Service "MSSQL: Latch Statistics" {
  import "wmi-service"

  vars.check_mode = "checksql"
  vars.wmi_submode = "latches"
  if (host.vars.mssql_edition == "Express") {
    vars.wmi_arg1 = "MSSQLSQLEXPRESS_MSSQLSQLEXPRESS"
  }

  assign where host.vars.wmi_mssql_server == "True"
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.disable_wmi
}

apply Service "MSSQL: Lock Statistics" {
  import "wmi-service"

  vars.check_mode = "checksql"
  vars.wmi_submode = "locks"
  if (host.vars.mssql_edition == "Express") {
    vars.wmi_arg1 = "MSSQLSQLEXPRESS_MSSQLSQLEXPRESS"
  }

  assign where host.vars.wmi_mssql_server == "True"
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.disable_wmi
}

apply Service "MSSQL: SQL Statistics" {
  import "wmi-service"

  vars.check_mode = "checksql"
  vars.wmi_submode = "sqlstats"
  if (host.vars.mssql_edition == "Express") {
    vars.wmi_arg1 = "MSSQLSQLEXPRESS_MSSQLSQLEXPRESS"
  }

  assign where host.vars.wmi_mssql_server == "True"
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.disable_wmi
}

apply Service "MSSQL: Wait Statistics" {
  import "wmi-service"

  vars.check_mode = "checksql"
  vars.wmi_submode = "waits"
  if (host.vars.mssql_edition == "Express") {
    vars.wmi_arg1 = "MSSQLSQLEXPRESS_MSSQLSQLEXPRESS"
  }

  assign where host.vars.wmi_mssql_server == "True"
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.disable_wmi
}

apply Service "MSSQL: Memory Statistics" {
  import "wmi-service"

  vars.check_mode = "checksql"
  vars.wmi_submode = "memory"
  if (host.vars.mssql_edition == "Express") {
    vars.wmi_arg1 = "MSSQLSQLEXPRESS_MSSQLSQLEXPRESS"
  }

  assign where host.vars.wmi_mssql_server == "True"
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.disable_wmi
}

apply Service "MSSQL: Cache Statistics" {
  import "wmi-service"

  vars.check_mode = "checksql"
  vars.wmi_submode = "cache"
  if (host.vars.mssql_edition == "Express") {
    vars.wmi_arg1 = "MSSQLSQLEXPRESS_MSSQLSQLEXPRESS"
  }

  assign where host.vars.wmi_mssql_server == "True"
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.disable_wmi
}

apply Service "Printers" {
  import "wmi-service"
  check_interval = 2m
  retry_interval = 1m

  vars.check_mode = "checkprint"
  vars.wmi_submode = "spooler"
  vars.wmi_arg1 = "%HP%"

  assign where "Windows Server in Domain" in host.groups && "Print Server" in host.groups
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.disable_wmi
  
}

apply Service "Exchange: HubTransportServer" {
  import "wmi-service"
  check_interval = 2m
  retry_interval = 1m

  vars.check_mode = "checkexchange"
  vars.wmi_submode = "HubTransportServer"

  assign where "Exchange Server" in host.groups
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.disable_wmi
  
}

apply Service "Exchange: TransportQueues" {
  import "wmi-service"
  check_interval = 2m
  retry_interval = 1m

  vars.check_mode = "checkexchange"
  vars.wmi_submode = "TransportQueues"

  assign where "Exchange Server" in host.groups
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.disable_wmi
  
}

apply Service "Exchange: DBInstances" {
  import "wmi-service"
  check_interval = 2m
  retry_interval = 1m

  vars.check_mode = "checkexchange"
  vars.wmi_submode = "DBInstances"
  vars.wmi_arg1 = "%"

  assign where "Exchange Server" in host.groups
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.disable_wmi
  
}

apply Service "Exchange: SmtpReceive" {
  import "wmi-service"
  check_interval = 2m
  retry_interval = 1m

  vars.check_mode = "checkexchange"
  vars.wmi_submode = "SmtpReceive"
  vars.wmi_arg1 = "%"

  assign where "Exchange Server" in host.groups
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.disable_wmi
  
}

apply Service "Exchange: SmtpSend" {
  import "wmi-service"
  check_interval = 2m
  retry_interval = 1m

  vars.check_mode = "checkexchange"
  vars.wmi_submode = "SmtpSend"
  vars.wmi_arg1 = "%"

  assign where "Exchange Server" in host.groups
  ignore where "Windows Server (Standalone)" in host.groups
  ignore where host.vars.disable_wmi
  
}

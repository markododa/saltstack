object CheckCommand "check-fortigate" {
        import "plugin-check-command"
        command = [ PluginDir + "/centreon-plugins/centreon_plugins.pl" ]

        arguments = {
                "--plugin" = "network::fortinet::fortigate::plugin"
                "--mode" = "$mode$"
                "--host" = "$address$"
                "--snmp-community" = "$snmp_community$"
                "--snmp-version" = "2c"
        }
}

apply Service "FortiGate: memory"{
  import "generic-service"
  check_command = "check-fortigate"
  vars.mode = "memory"
  vars.snmp_community = host.vars.community
  assign where "FortiGate" in host.groups && host.vars.community != ""
}

apply Service "FortiGate: list-interfaces"{
  import "generic-service"
  check_command = "check-fortigate"
  vars.mode = "list-interfaces"
  vars.snmp_community = host.vars.community
  assign where "FortiGate" in host.groups && host.vars.community != ""
}

apply Service "FortiGate: interfaces"{
  import "generic-service"
  check_command = "check-fortigate"
  vars.mode = "interfaces"
  vars.snmp_community = host.vars.community
  assign where "FortiGate" in host.groups && host.vars.community != "" && host.vars.check_interfaces == true
}

apply Service "FortiGate: cpu"{
  import "generic-service"
  check_command = "check-fortigate"
  vars.mode = "cpu"
  vars.snmp_community = host.vars.community
  assign where "FortiGate" in host.groups && host.vars.community != ""
}

apply Service "FortiGate: ap-usage"{
  import "generic-service"
  check_command = "check-fortigate"
  vars.mode = "ap-usage"
  vars.snmp_community = host.vars.community
  assign where "FortiGate" in host.groups && host.vars.community != ""
  ignore where "ap-usage" in host.vars.fortigate_disabled 
}

apply Service "FortiGate: cluster-status"{
  import "generic-service"
  check_command = "check-fortigate"
  vars.mode = "cluster-status"
  vars.snmp_community = host.vars.community
  assign where "FortiGate" in host.groups && host.vars.community != ""
  ignore where "cluster-status" in host.vars.fortigate_disabled 
}

apply Service "FortiGate: disk"{
  import "generic-service"
  check_command = "check-fortigate"
  vars.mode = "disk"
  vars.snmp_community = host.vars.community
  assign where "FortiGate" in host.groups && host.vars.community != ""
}

apply Service "FortiGate: hardware"{
  import "generic-service"
  check_command = "check-fortigate"
  vars.mode = "hardware"
  vars.snmp_community = host.vars.community
  assign where "FortiGate" in host.groups && host.vars.community != ""
}

apply Service "FortiGate: ips-stats"{
  import "generic-service"
  check_command = "check-fortigate"
  vars.mode = "ips-stats"
  vars.snmp_community = host.vars.community
  assign where "FortiGate" in host.groups && host.vars.community != ""
}

apply Service "FortiGate: list-virtualdomains"{
  import "generic-service"
  check_command = "check-fortigate"
  vars.mode = "list-virtualdomains"
  vars.snmp_community = host.vars.community
  assign where "FortiGate" in host.groups && host.vars.community != ""
}

apply Service "FortiGate: sessions"{
  import "generic-service"
  check_command = "check-fortigate"
  vars.mode = "sessions"
  vars.snmp_community = host.vars.community
  assign where "FortiGate" in host.groups && host.vars.community != ""
}

apply Service "FortiGate: signatures"{
  import "generic-service"
  check_command = "check-fortigate"
  vars.mode = "signatures"
  vars.snmp_community = host.vars.community
  assign where "FortiGate" in host.groups && host.vars.community != ""
}

apply Service "FortiGate: vdom-cpu"{
  import "generic-service"
  check_command = "check-fortigate"
  vars.mode = "vdom-cpu"
  vars.snmp_community = host.vars.community
  assign where "FortiGate" in host.groups && host.vars.community != ""
}

apply Service "FortiGate: vdom-memory"{
  import "generic-service"
  check_command = "check-fortigate"
  vars.mode = "vdom-memory"
  vars.snmp_community = host.vars.community
  assign where "FortiGate" in host.groups && host.vars.community != ""
}

apply Service "FortiGate: vdom-session"{
  import "generic-service"
  check_command = "check-fortigate"
  vars.mode = "vdom-session"
  vars.snmp_community = host.vars.community
  assign where "FortiGate" in host.groups && host.vars.community != ""
}

apply Service "FortiGate: vdom-state"{
  import "generic-service"
  check_command = "check-fortigate"
  vars.mode = "vdom-state"
  vars.snmp_community = host.vars.community
  assign where "FortiGate" in host.groups && host.vars.community != ""
}

apply Service "FortiGate: vdom-usage"{
  import "generic-service"
  check_command = "check-fortigate"
  vars.mode = "vdom-usage"
  vars.snmp_community = host.vars.community
  assign where "FortiGate" in host.groups && host.vars.community != ""
  ignore where "vdom-usage" in host.vars.fortigate_disabled 
}

apply Service "FortiGate: virus"{
  import "generic-service"
  check_command = "check-fortigate"
  vars.mode = "virus"
  vars.snmp_community = host.vars.community
  assign where "FortiGate" in host.groups && host.vars.community != ""
}

apply Service "FortiGate: vpn"{
  import "generic-service"
  check_command = "check-fortigate"
  vars.mode = "vpn"
  vars.snmp_community = host.vars.community
  assign where "FortiGate" in host.groups && host.vars.community != ""
  ignore where "vpn" in host.vars.fortigate_disabled 
}
